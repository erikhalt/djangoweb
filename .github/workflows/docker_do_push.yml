name: dev image deploy

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:

env:
  PROJECT_NAME: djangoproject
  TAG: latest #$(git rev-parse --short "$GITHUB_SHA")
  DEPLOYMENT_NAME: djangoproject-deployment
  NAMESPACE: dev
jobs:
  build_image:
    name: building the image for registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Build image 
        run: docker build -t python-docker .
       
      - name: save image
        run: docker save python-docker > /tmp/python-docker.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-docker
          path: /tmp/python-docker.tar

  push_to_dockerhub:
    needs: build_image
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: python-docker
          path: /tmp

      - name: load image
        run: docker load < /tmp/python-docker.tar 

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.DOCKER_HUB_KEY }}
      
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #   with:
      #     images: erikhalt/${{ env.PROJECT_NAME }}

      - name: Tag image 
        run:
          docker tag python-docker erikhalt/${{ env.PROJECT_NAME }}:${{ env.TAG }}
      
      - name: Push image to Dokcerhub Registry 
        run: docker push erikhalt/${{ env.PROJECT_NAME }}:${{ env.TAG }}
      
  push_to_digitalocean:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: python-docker
          path: /tmp

      - name: load image
        run: docker load < /tmp/python-docker.tar  

      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600

      - name: Tag image 
        run:
          docker tag python-docker registry.digitalocean.com/erikregistry/${{ env.PROJECT_NAME }}:${{ env.TAG }}
      
      - name: Push image to DO Container Registry 
        run: docker push registry.digitalocean.com/erikregistry/${{ env.PROJECT_NAME }}:${{ env.TAG }}
 
