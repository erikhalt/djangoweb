name: Publish Docker image

on:
  push:
    branches:
      - 'main'
  

env:
  PROJECT_NAME: djangoproject
  TAG: $(git rev-parse --short "$GITHUB_SHA")-prod
  DEPLOYMENT_NAME: djangoproject-prod-deployment
  NAMESPACE: prod
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.DOCKER_HUB_KEY }}
      
      

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: erikhalt/${{ env.PROJECT_NAME }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2

      - name: Build image 
        run: docker build -t python-docker .

      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_REGISTRY_KEY }}

      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600

      - name: Tag image 
        run:
          docker tag python-docker registry.digitalocean.com/erikregistry/${{ env.PROJECT_NAME }}:${{ env.TAG }}
      
      - name: Push image to DO Container Registry 
        run: docker push registry.digitalocean.com/erikregistry/${{ env.PROJECT_NAME }}:${{ env.TAG }}
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 clustermedrasmus

      - name: Update deployment
        run: kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} djangoproject=registry.digitalocean.com/erikregistry/${{ env.PROJECT_NAME }}:${{ env.TAG }} --namespace=${{ env.NAMESPACE }}
        
      - name: Verify deployment
        run: kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} --namespace=${{ env.NAMESPACE }}
      
